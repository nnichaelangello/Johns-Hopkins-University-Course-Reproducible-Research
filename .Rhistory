knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
install.packages(c("knitr", "ggplot2", "dplyr"))
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("dplyr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("dplyr")
install.packages("ggplot2")
library(knitr)
library(ggplot2)
library(dplyr)
library(knitr)
library(ggplot2)
library(dplyr)
library(knitr)
library(ggplot2)
library(dplyr)
data <- read.csv("activity.csv")
str(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
sum(is.na(data$steps))
steps_per_day <- data %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE))
ggplot(steps_per_day, aes(x = total_steps)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black") +
labs(title = "Histogram of Total Steps per Day", x = "Total Steps", y = "Frequency")
mean_steps <- mean(steps_per_day$total_steps, na.rm = TRUE)
median_steps <- median(steps_per_day$total_steps, na.rm = TRUE)
cat("Mean total steps per day:", mean_steps, "\n")
cat("Median total steps per day:", median_steps, "\n")
avg_steps_interval <- data %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
ggplot(avg_steps_interval, aes(x = interval, y = avg_steps)) +
geom_line(color = "blue") +
labs(title = "Average Steps per 5-Minute Interval", x = "Interval", y = "Average Steps")
max_interval <- avg_steps_interval$interval[which.max(avg_steps_interval$avg_steps)]
cat("Interval with maximum average steps:", max_interval, "\n")
total_na <- sum(is.na(data$steps))
cat("Total missing values:", total_na, "\n")
data_imputed <- data
for(i in 1:nrow(data_imputed)) {
if(is.na(data_imputed$steps[i])) {
interval_val <- data_imputed$interval[i]
data_imputed$steps[i] <- avg_steps_interval$avg_steps[avg_steps_interval$interval == interval_val]
}
}
steps_per_day_imputed <- data_imputed %>%
group_by(date) %>%
summarise(total_steps = sum(steps))
ggplot(steps_per_day_imputed, aes(x = total_steps)) +
geom_histogram(binwidth = 1000, fill = "green", color = "black") +
labs(title = "Histogram of Total Steps per Day (Imputed)", x = "Total Steps", y = "Frequency")
mean_steps_imputed <- mean(steps_per_day_imputed$total_steps)
median_steps_imputed <- median(steps_per_day_imputed$total_steps)
cat("Mean total steps per day (imputed):", mean_steps_imputed, "\n")
cat("Median total steps per day (imputed):", median_steps_imputed, "\n")
data_imputed$day_type <- ifelse(weekdays(data_imputed$date) %in% c("Saturday", "Sunday"),
"weekend", "weekday")
data_imputed$day_type <- as.factor(data_imputed$day_type)
avg_steps_daytype <- data_imputed %>%
group_by(interval, day_type) %>%
summarise(avg_steps = mean(steps))
ggplot(avg_steps_daytype, aes(x = interval, y = avg_steps)) +
geom_line(color = "blue") +
facet_wrap(~ day_type, ncol = 1) +
labs(title = "Average Steps per Interval: Weekday vs Weekend", x = "Interval", y = "Average Steps")
avg_steps_interval <- data %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE), .groups = "drop")
ggplot(avg_steps_interval, aes(x = interval, y = avg_steps)) +
geom_line(color = "blue") +
labs(title = "Average Steps per 5-Minute Interval", x = "Interval", y = "Average Steps")
max_interval <- avg_steps_interval$interval[which.max(avg_steps_interval$avg_steps)]
cat("Interval with maximum average steps:", max_interval, "\n")
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("activity.csv")
str(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
sum(is.na(data$steps))
steps_per_day <- data %>%
group_by(date) %>%
summarise(total_steps = sum(steps, na.rm = TRUE), .groups = "drop")
ggplot(steps_per_day, aes(x = total_steps)) +
geom_histogram(binwidth = 1000, fill = "blue", color = "black") +
labs(title = "Histogram of Total Steps per Day", x = "Total Steps", y = "Frequency")
mean_steps <- mean(steps_per_day$total_steps, na.rm = TRUE)
median_steps <- median(steps_per_day$total_steps, na.rm = TRUE)
cat("Mean total steps per day:", mean_steps, "\n")
cat("Median total steps per day:", median_steps, "\n")
avg_steps_interval <- data %>%
group_by(interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE), .groups = "drop")
ggplot(avg_steps_interval, aes(x = interval, y = avg_steps)) +
geom_line(color = "blue") +
labs(title = "Average Steps per 5-Minute Interval", x = "Interval", y = "Average Steps")
max_interval <- avg_steps_interval$interval[which.max(avg_steps_interval$avg_steps)]
cat("Interval with maximum average steps:", max_interval, "\n")
total_na <- sum(is.na(data$steps))
cat("Total missing values:", total_na, "\n")
data_imputed <- data
for(i in 1:nrow(data_imputed)) {
if(is.na(data_imputed$steps[i])) {
interval_val <- data_imputed$interval[i]
data_imputed$steps[i] <- avg_steps_interval$avg_steps[avg_steps_interval$interval == interval_val]
}
}
steps_per_day_imputed <- data_imputed %>%
group_by(date) %>%
summarise(total_steps = sum(steps), .groups = "drop")
ggplot(steps_per_day_imputed, aes(x = total_steps)) +
geom_histogram(binwidth = 1000, fill = "green", color = "black") +
labs(title = "Histogram of Total Steps per Day (Imputed)", x = "Total Steps", y = "Frequency")
mean_steps_imputed <- mean(steps_per_day_imputed$total_steps)
median_steps_imputed <- median(steps_per_day_imputed$total_steps)
cat("Mean total steps per day (imputed):", mean_steps_imputed, "\n")
cat("Median total steps per day (imputed):", median_steps_imputed, "\n")
data_imputed$day_type <- ifelse(weekdays(data_imputed$date) %in% c("Saturday", "Sunday"),
"weekend", "weekday")
data_imputed$day_type <- as.factor(data_imputed$day_type)
avg_steps_daytype <- data_imputed %>%
group_by(interval, day_type) %>%
summarise(avg_steps = mean(steps), .groups = "drop")
ggplot(avg_steps_daytype, aes(x = interval, y = avg_steps)) +
geom_line(color = "blue") +
facet_wrap(~ day_type, ncol = 1) +
labs(title = "Average Steps per Interval: Weekday vs Weekend", x = "Interval", y = "Average Steps")
